---
- hosts: mysql
  name: Installing mysql on first machine
  tasks: 
    - name: Install mysql-server
      become: true
      dnf:
        name: mysql-server

    - name: Start mysql
      become: true
      systemd:
        name: mysqld
        state: started
        enabled: true
      ignore_errors: "{{ ansible_check_mode }}"
    
    - name: Create mysql home directory
      become: true
      file:
        path: /home/mysql
        state: directory
        owner: mysql
        group: mysql
        mode: '755'
        recurse: true

    - name: Change selinux context
      become: true
      community.general.sefcontext:
        target: '/home/mysql(/.*)?'
        setype: mysqld_db_t

    - name: Apply selinux context
      become: true
      command: restorecon -Rv /home/mysql/

    - name: Increase file descriptors limit
      become: true
      community.general.pam_limits:
        value: 4096
        limit_type: '-'
        domain: '*'
        limit_item: "nofile"

    - name: Copy the mysql conf file
      become: true
      copy: 
        dest: /etc/my.cnf
        src: my.cnf
      
    - name: Restart mysql
      become: true
      systemd:
        name: mysqld
        state: restarted
      ignore_errors: "{{ ansible_check_mode }}"

    - name: Create socket symlink
      become: true
      file: 
        state: link
        force: true
        src: /home/mysql/mysql.sock
        dest: /var/lib/mysql/mysql.sock

    - name: Set mysql root password
      become: true
      community.mysql.mysql_user:
        login_user: 'root'
        login_password: ''
        name: 'root'
        password: "{{ db_password }}"
        state: present
      
    - name: Fix remote root access
      community.mysql.mysql_query:
        login_user: 'root'
        login_password: "{{ db_password }}"
        query:
        - GRANT ALL PRIVILEGES ON *.* TO 'root'@'localhost'
        - UPDATE mysql.user SET host='%' WHERE user='root'

    - name: Restart mysql
      become: true
      systemd:
        name: mysqld
        state: restarted
      ignore_errors: "{{ ansible_check_mode }}"

    - name: Create testing database
      community.mysql.mysql_query:
        login_user: 'root'
        login_password: "{{ db_password }}"
        query:
        - CREATE DATABASE IF NOT EXISTS {{ testing_database }};

    - name: Install tuned 
      become: true
      dnf:
        name: tuned
    
    - name: Start tuned 
      become: true
      systemd:
        name: tuned
        state: started
        enabled: true
    
    - name: Set throughput-performance profile on tuned
      become: true
      command: tuned-adm profile throughput-performance
        